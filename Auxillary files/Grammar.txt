<программа> ::= <текст>

<текст> ::= (<строка>|<функция>|<конструкция>){<строка>|<функция>|<конструкция>}

<строка> ::= <описание> | <выражение>;

<описание> ::= (var|let) <идентификатор> {= (<выражение>)}{, 
<идентификатор> {= (<выражение>)}}

<функция>::= function <идентификатор> "("{<идентификатор> {, <идентификатор>}}")" "{" <текст> "}"

<идентификатор> ::= (<буква>| _ | $){<буква>| _ | $ | <цифра>}

<выражение> ::= ["("]<унарный оператор> <аргумент> {(<оператор>|<оператор сравнения>) <аргумент> [")"]} | ["("] <аргумент> <унарный постфиксный оператор> {(<оператор>|<оператор сравнения>) <аргумент> [")"]} | ["("]<аргумент> (<оператор>|<оператор сравнения>) ["{"]<аргумент> [")"] {(<оператор>|<оператор сравнения>) <аргумент>[")"]} 

<выражение без оператора сравнения> ::= ["("]<унарный оператор> <аргумент> {<оператор> <аргумент> [")"]} | ["("] <аргумент> <унарный постфиксный оператор> {<оператор> <аргумент> [")"]} | ["("]<аргумент> <оператор> ["{"]<аргумент> [")"] {<оператор> <аргумент>[")"]} 

<оператор> ::= + | - | * | / | ++ | -- | ... | return | <присвающий оператор>

<аргумент> ::= <идентификатор> | <константа> | <массив> | <элемент массива> | <вызов функции>

<конструкция> ::= <условный оператор> | <оператор цикла>

<буква> ::= A | B | ... | Z | a | ... | z

<цифра> ::= 0 | 1 | 2 | 3 | ... | 9 

<вызов функции> ::= <идентификатор> "(" {<выражение> {, <выражение>}} ")"

<константа> ::= <"строка"> | <число>

<условный оператор> ::= if "(" <условие> ")" ("{" <текст> "}" | <строка>) [else if "(" <условие> ")" ("{" <текст> "}" | <строка>)] [else ("{" <текст> "}" | <строка>)]

<оператор цикла> ::= for "(" <описание> ; <условие> ; <инкремент> ")" ("{" <текст> "}" | <строка>) | while "(" <условие> ")" ("{" <текст> "}" | <строка>) | do ("{" <текст> "}" | <строка>) while "(" <условие> ")" ;

<"строка"> ::= "<символ>{<символ>}"

<число> ::= <целое число> | <число с плавающей точкой>

<условие> ::= [! (] <выражение без оператора сравнения> <оператор сравнения> <выражение без оператора сравнения> [)] {("||" | "&&" | "|" | "&") <условие>)}

<инкремент> ::= ++ <идентификатор> | <идентификатор> ++ | -- <идентификатор> | <идентификатор> -- | <присваивающее выражение>

<символ> ::= любой печатный символ

<целое число> ::= [-|+] <цифра> {<цифра>} {<положительная экспонента>}

<число с плавающей точкой> ::= <целое число>.{<цифра>{<цифра>}}{<экспонента>} | [-|+].{<цифра>{<цифра>}}{<экспонента>}

<оператор сравнения> ::= < | > | == | != | <= | =>

<присваивающее выражение> ::= <идентификатор> <присвающий оператор> <выражение>

<положительная экспонента> ::= (e|E)<положительное целое число> 

<экспонента> ::= <положительная экспонента> | <отрицательная экспонента>

<присвающий оператор> ::= = | += | -= | *= | /= | &= | |=

<положительное целое число> ::= [+]<цифра>{<цифра>}

<отрицательная экспонента> ::= (e|E)<отрицательное целое число>

<отрицательное целое число> ::= -<цифра>{<цифра>}

<массив> ::= "[" <аргумент>  {, <аргумент>}"]"

<элемент массива> ::= <идентификатор>"["<аргумент>"]" {"["<аргумент>"]"}